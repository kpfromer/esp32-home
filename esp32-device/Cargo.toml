[package]
name = "esp32-home"
version = "0.1.0"
authors = ["Kyle Pfromer <kpfromer2@gmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"

[features]
default = []
no-print = ["esp-println/no-op"]

[[bin]]
name = "receiver"
path = "src/main.rs"

[[bin]]
name = "transmitter"
path = "src/transmitter.rs"

[[bin]]
name = "transmitter_deep_sleep"
path = "src/transmitter_deep_sleep.rs"

[[bin]]
name = "test_ez"
path = "src/test_ez.rs"

[dependencies]
esp-backtrace = { version = "0.11.0", features = [
    "esp32",
    "exception-handler",
    "panic-handler",
    "println",
] }
esp-hal = { version = "0.17.0", features = [ "esp32", "async", "embassy", "embassy-executor-thread", "embassy-integrated-timers", "embassy-time-timg0" ] }
esp-println = { version = "0.9.0", features = ["esp32", "log"] }
log = { version = "0.4.20" }
embedded-svc = { version = "0.26.1", default-features = false, features = [] }
embedded-io = "0.6.1"
esp-wifi = { version = "0.5.0", features = [
    "esp32",
    "phy-enable-usb",
    "utils",
    "wifi",
    "esp-now",
    "async"
] }
heapless = { version = "0.8.0", default-features = false }
smoltcp = { version = "0.11.0", default-features = false, features = [
    "medium-ethernet",
    "proto-dhcpv4",
    "proto-igmp",
    "proto-ipv4",
    "socket-dhcpv4",
    "socket-icmp",
    "socket-raw",
    "socket-tcp",
    "socket-udp",
] }

# Embassy
embassy-executor    = { version = "0.5.0", features = ["task-arena-size-8192"] }
embassy-sync        = "0.5.0"
embassy-time        = "0.3.0"

# Shared code
common = { path = "../common", version = "0.1.0" }
postcard = "1.0.8"
embedded-io-async = "0.6.1"
static_cell = { version = "2.0.0", features = ["nightly"] }
embedded-hal-async = "1.0.0"

[profile.dev]
# Rust debug is too slow. 
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1 # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
